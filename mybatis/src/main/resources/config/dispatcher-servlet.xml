<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!-- 启用注解，并定义组件查找规则 ，mvc层只负责扫描@Controller -->  
    <context:component-scan base-package="controller"  
        use-default-filters="false">  
        <context:include-filter type="annotation"  
            expression="org.springframework.stereotype.Controller" />
            <context:include-filter type="annotation"  
            expression="org.springframework.web.bind.annotation.ControllerAdvice" />  
    </context:component-scan>
     <!-- 国际化资源文件 -->  
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">    
           <property name="basenames">    
                <list>    
                   <value>message</value>     
               </list>    
           </property>    
    </bean>   
	
	<!-- 启动Springmvc注解驱动 -->
 	<!-- 返回json 方法一 需要导入 fastjson.jar包 -->  
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="false">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
		            <list>
		               <!-- 输出key时是否使用双引号 -->
		               <value>QuoteFieldNames</value>
		               <!-- 是否输出值为null的字段 -->
		               <!-- <value>WriteMapNullValue</value> -->
		               <!-- 数值字段如果为null,输出为0,而非null -->
		               <value>WriteNullNumberAsZero</value>
		               <!-- List字段如果为null,输出为[],而非null -->
		               <value>WriteNullListAsEmpty</value>
		               <!-- 字符类型字段如果为null,输出为"",而非null -->
		               <value>WriteNullStringAsEmpty</value>
		               <!-- Boolean字段如果为null,输出为false,而非null -->
		               <value>WriteNullBooleanAsFalse</value>
		               <!-- null String也要输出  -->
		               <!-- <value>WriteMapNullValue</value> -->
		               <!-- Date的日期转换器 -->
		               <value>WriteDateUseDateFormat</value>
		               <!-- 循环数据引用禁用 -->
		               <value>DisableCircularReferenceDetect</value>
		            </list>
         		</property>
            </bean>
       <!-- 使用XML格式输出数据 -->
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		        <constructor-arg>
		        	<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
				        <property name="streamDriver">
				            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
				        </property>
				    </bean>
		        </constructor-arg>
		        <property name="supportedMediaTypes" value="application/xml"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
     
      <!-- 视图处理器 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"></property>
    </bean>
     <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	
	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	
	
	<!-- 全局异常处理
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="java.lang.Exception">error/500</prop>
	        </props>
	    </property>
	</bean>
	 -->
</beans>